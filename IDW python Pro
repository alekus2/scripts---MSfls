import arcpy
from arcpy.sa import *
import os

class Toolbox(object):
    def __init__(self):
        self.label = "Exemplo de Interpolação IDW"
        self.alias = "idw_example_toolbox"
        self.tools = [IDWInterpolationExample]

class IDWInterpolationExample(object):
    def __init__(self):
        self.label = "Exemplo de Interpolação IDW"
        self.description = "Cria um mapa de calor com base na taxa de sobrevivência das mudas usando Interpolação IDW."

    def getParameterInfo(self):
        return [
            arcpy.Parameter(displayName="Pasta de Saída",
                            name="output_folder",
                            datatype="DEFolder",
                            parameterType="Required",
                            direction="Input"),
            arcpy.Parameter(displayName="Shapefile de Entrada",
                            name="input_shapefile",
                            datatype="SHAPEFILE",
                            parameterType="Required",
                            direction="Input"),
            arcpy.Parameter(displayName="Mapa de Recorte (opcional)",
                            name="clip_feature",
                            datatype="GPFeatureLayer",
                            parameterType="Optional",
                            direction="Input")
        ]

    def execute(self, parameters, messages):
        output_folder = parameters[0].valueAsText
        input_shapefile = parameters[1].valueAsText
        clip_feature = parameters[2].valueAsText if parameters[2].value is not None else None

        # Verifica se a pasta de saída existe, se não, cria
        if not os.path.exists(output_folder):
            os.makedirs(output_folder)

        # Verifica e faz checkout da extensão espacial
        if not arcpy.CheckExtension("Spatial"):
            arcpy.CheckOutExtension("Spatial")
            return
        arcpy.CheckOutExtension("Spatial")

        # Verifica se o shapefile de entrada existe
        if not arcpy.Exists(input_shapefile):
            messages.addErrorMessage(f"O shapefile de entrada '{input_shapefile}' não existe.")
            return

        # Verifica e obtém a extensão do shapefile
        desc = arcpy.Describe(input_shapefile)
        extent = desc.extent

        # Define a extensão para a área dos pontos
        arcpy.env.extent = extent
        messages.addMessage(f"Extensão definida para: {extent}")

        # Define a projeção para a área de saída (mesma do shapefile de entrada)
        spatial_ref = desc.spatialReference
        arcpy.env.outputCoordinateSystem = spatial_ref
        messages.addMessage(f"Projeção definida para: {spatial_ref.name}")

        # Cria um layer de pontos para a interpolação
        arcpy.MakeFeatureLayer_management(input_shapefile, "shp_layer")

        # Define o campo de taxa de sobrevivência
        field_name = "F_Sobreviv"

        # Define o tamanho da célula e o parâmetro de potência
        cell_size = 30  # Ajuste conforme necessário
        power = 2  # Potência do IDW, ajustável

        # Realiza a interpolação IDW
        out_raster = arcpy.sa.Idw("shp_layer", field_name, cell_size, power)

        # Se houver uma camada de recorte, aplica a máscara
        if clip_feature:
            out_raster = ExtractByMask(out_raster, clip_feature)
            messages.addMessage(f"Máscara aplicada com a camada: {clip_feature}")

        # Salva o resultado da interpolação
        raster_output_path = os.path.join(output_folder, "IDW_Interpolacao.tif")
        out_raster.save(raster_output_path)
        messages.addMessage(f"Raster salvo em: {raster_output_path}")

        # Finaliza o processo de extensão
        arcpy.CheckInExtension("Spatial")

        messages.addMessage("Processamento concluído com sucesso.")
