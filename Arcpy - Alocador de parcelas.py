import arcpy
import os
import pandas as pd

class Toolbox(object):
    def __init__(self):
        self.label = "Alocador de parcelas"
        self.alias = "alocator_toolbox"
        self.tools = [AlocadorDeParcelas]

class AlocadorDeParcelas(object):
    def __init__(self):
        self.label = "Alocar parcelas"
        self.description = "Verifica dentro da Base de dados, conta CD_USO_SOL e faz um query e exporta o query como um shapefile"
        self.canRunInBackground = False

    def getParameterInfo(self):
        param_excel = arcpy.Parameter(
            displayName="Arquivo Excel com a programação",
            name="base_path",
            datatype="DEFile",
            parameterType="Required",
            direction="Input"
        )

        param_workspace = arcpy.Parameter(
            displayName="Pasta de saída",
            name="workspace",
            datatype="DEWorkspace",
            parameterType="Required",
            direction="Input"
        )

        param_layer = arcpy.Parameter(
            displayName="Camada base de dados",
            name="input_layer",
            datatype="DEFeatureClass",
            parameterType="Required",
            direction="Input"
        )

        return [param_excel, param_workspace, param_layer]

    def execute(self, parameters, messages):
        base_path = parameters[0].valueAsText
        workspace = parameters[1].valueAsText
        input_layer = parameters[2].valueAsText

        if not arcpy.Exists(base_path):
            arcpy.AddError(f"Erro: O arquivo {base_path} não foi encontrado.")
            return

        if not arcpy.Exists(workspace):
            arcpy.AddError(f"Erro: A pasta {workspace} não foi encontrada.")
            return

        arcpy.env.workspace = workspace
        df = pd.read_excel(base_path)
        colunas_esperadas = ['ID_PROJETO', 'ID_TALHAO', 'AREA_HA']
        for coluna in colunas_esperadas:
            if coluna not in df.columns:
                arcpy.AddError(f"Erro: A coluna {coluna} não foi encontrada no arquivo do Excel.")
                return

        cod_talhao = df['ID_TALHAO'].astype(str)
        cod_project = df['ID_PROJETO'].astype(str)
        area_talhao = df['AREA_HA'].astype(float)

        query = f"ID_PROJETO IN ({','.join(map(str, cod_project.unique()))}) AND ID_TALHAO IN ({','.join(map(str, cod_talhao.unique()))})"

        output_shapefile = os.path.join(workspace, "TalhoesSelecionados.shp")
        arcpy.Select_analysis(input_layer, output_shapefile, query)

        desc = arcpy.Describe(output_shapefile)
        origin_coord = f"{desc.extent.XMin} {desc.extent.YMin}"
        y_axis_coord = f"{desc.extent.XMin} {desc.extent.YMax}"
        corner_coord = f"{desc.extent.XMax} {desc.extent.YMax()}"

        cell_size = (area_talhao.mean() ** 0.5) / 9
        if cell_size <= 0:
            arcpy.AddError("Erro: O tamanho da célula calculado é inválido.")
            return

        fishnet_shp = os.path.join(workspace, "Fishnet.shp")

        arcpy.CreateFishnet_management(
            out_feature_class=fishnet_shp,
            origin_coord=origin_coord,
            y_axis_coord=y_axis_coord,
            cell_width=cell_size,
            cell_height=cell_size,
            number_rows="",
            number_columns="",
            corner_coord=corner_coord,
            labels="NO_LABELS",
            template=output_shapefile,
            geometry_type="POLYGON"
        )

        buffer_shp = os.path.join(workspace, "Buffer_30m.shp")
    
        arcpy.Buffer_analysis(output_shapefile, buffer_shp, "30 Meters")  

        intersect_shp = os.path.join(workspace, "Intersected.shp")
        arcpy.Intersect_analysis([buffer_shp, fishnet_shp], intersect_shp)

        pontos_count = int(arcpy.GetCount_management(intersect_shp)[0])
        planejado = len(cod_talhao)
        if pontos_count != planejado:
            arcpy.AddWarning(f"Quantidade de pontos ({pontos_count}) diferente do planejado ({planejado}).")

        merged_shp = os.path.join(workspace, "Final_Points.shp")
        arcpy.Merge_management([intersect_shp], merged_shp)
        arcpy.AddMessage("Processo concluído.")

Traceback (most recent call last):
  File "<string>", line 72, in execute
  File "C:\Program Files\ArcGIS\Pro\Resources\ArcPy\arcpy\analysis.py", line 141, in Select
    raise e
  File "C:\Program Files\ArcGIS\Pro\Resources\ArcPy\arcpy\analysis.py", line 138, in Select
    retval = convertArcObjectToPythonObject(gp.Select_analysis(*gp_fixargs((in_features, out_feature_class, where_clause), True)))
  File "C:\Program Files\ArcGIS\Pro\Resources\ArcPy\arcpy\geoprocessing\_base.py", line 512, in <lambda>
    return lambda *args: val(*gp_fixargs(args, True))
arcgisscripting.ExecuteError: ERROR 000358: Invalid expression ID_PROJETO IN (151,2036,2411,371,29,245,508,169,967,6345,557,531,124,5018,271,637,165,2083,1086,575,507,2023,2185,2039,2004,6289,576,698,614,496,646,2134,6330,6271,6273,539,197,6409,1023,464,522,6361,2067,216,82,175,2414,1,560,559,229,202,6362,6283,6217,273,6190,307,6377,6373,6356,2436,55,1080,6319,6163,6520,6436,6380,6502,394,6515,1108,30,6505,392,1128,6236,390,344,75,648,503,6454,6261,385,294,6259,6227,6489,2117,6411,308,6416,6412,377,6512,6434,607,6414,529,588,6299,162,177,208,193,478,342,2058,378,2070,6297,5010,6256,641,354,6511,388,520,578,6444,122,6257,2197,290,6205,6220,9,6462,459,6249,1119,254,6326,6248,6322,542,632,6514,528,6385,6439,2081,679,2405,6450,565,6430,6195,23,2420,6254,994,6383,6344,272,6348,6188,6379,6311,425,269,6420,1130,458,6429,6488,692,521,247,6486,1106,6465,6494,347,306,611,6317,1022,6300,2075,399,242,375,657,255,349,446,6234,6270,6509,5020,6384,6354,10,547,266,6268,454,2021,6258,6506,6501,6320,6480,432,6491,423,238,6272,226,6390,263,6456,2110,6519,63,475,14,469,582,218,541,6221,585,293,6492,589,6404,6442,6500,6329,6327,435,6301,517,361,6503,6508,2013,81,2014,144,2026,42,172,462,420,605,817,33,676,2334,340,664,5,591,524,6336,440,2089,612,6355,683,2168,2105,2017,2107,2033,639,2129,198,2349,2252,93,2076,203,240,662,214,6161,181,138,2203,128,6196,2038,2338,2012,80,2024,108,2078,15,2146,5009,659,437,220,112,109,2034,85,2015,195,438,321,6464,6189,2337,6496,2032,6240,6172,6482,527,126,2170,6463,6419,2171,6243,106,89,6457,2090,94,410,311,2084,581,574,2276,355,2111,6278,2116,433,115,2335,699,2011,6244,2085,2167,2153,822,821,441,176,2202,6279,485,199,2180,755,2155,2154,2156,456,1018,2025,383,623,6,592,2099,6497,2072,2018,2296,2151,191,634,6441,2049,695,2101,4,2043,660,192,6305,2030,147,2029,579,566,823,2056,1024,221,145,149,158,2137,83,166,6199,231,2216,225,2120,513,526,553,1078,556,2091,179,442,346,6332,315,232,787,350,2092,2093,2061,86,120,150,596,100,2177,693,428,289,398,6210,156,450,649,674,2415,209,448,673,188,6318,2008,99,474,2353,2145,2063,196,182,167,351,186,6518,2052,2408,2432,185,136,407,24,471,190,2366,2042,551,352,516,5008,368,1079,92,168,274,260,597,213,6194,241,627,6198,103,6466,2027,2178,2303,688,178,146,2009,2316,161,6298,5001,6288,2037,6333,2005,239,2000,997,2265,473,369,6452,2051,6253,696,91,393,268,163,765,631,119,510,300,2106,667,6229,2086,380,2222,326,2208,467,536,811,2057,2421,184,573,601,148,506,514,2159,2128,2182,322,466,788,6471,6443,773,2201,690,6510,445,2113,2294,2007,2060,2186,2200,281,353,6460,654,610,2130,6290,6213,49,283,2339,409,2098,6212,2204,2147,2041,672,2127,47,143,716,387,680,554,523,439,284,134,6473,28,5003,72,222,2123,2096,976,5000,602,20,568,159,2071,436,552,624,251,2230,153,561,210,689,2082,365,477,2097,253,212,2307,211,2112,6351,2125,6459,6309,2062,609,606,312,534,483,2108,2352,608,87,626,995,19,6277,505,201,6438,6423,2148,427,550,2006,2087,417,2065,544,426,2183,5005,645,6347,628,545,642,677,5007,681,603,6262,650,685,810,1127,2001,171,2255,5006,530,2267,6293,345,2066,2224,62,2215,408,402,37,416,206,6507,2050,599,2020,489,2192,2055,820,2149,6302,2031,415,348,219,160,2114,205,48,6521,6312,6173,154,1104,282,2214,604,621,1103,424,152,6513,2122,2169,84,139,509,313,71,2142,51,600,111,395,6499,6324,2022,57,449,2126,333,6424,2131,259,2109,635,629,590,2136,584,107,2047,2064,2158,2118,386,504,6323,2166,630,583,1088,580,562,2435,403,1089,538,636,567,6484,2035,336,671,187,6426,431,807,6218,809,6162,200,2139,1090,207,2372,655,1092,6425,2181,164,1091,303,118,625,638,2193,658,2144,170,117,6287,189,1031,412,1030,2191,2138,593,67,373,359,6206,6160,6392,6207,6231,6437,452,6417,6493,586,1115,6286,6483,6382,6498,310,2264,480,1118,5015,376,278,511,1122,2088,2410,127,6461,1129,6306,204,405,6363,470,52,5004,18,2313,2016,594,157,6413,155,264,2406,277,5016,6343,2010,6232,286,6401,36,1114,343,270,675,447,2433,180,413,6328,453,320,21,2416,2409,2179,292,6391,411,633,543,652,13,318,257,414,316,11,301,141,69,2417,302,22,6400,70,258,487,58,6402,5014,6435,295,6433,397,6359,330,2211,2413,6275,2104,548,1120,8,328,678,6321,5017,2019,78,252,6251,6374,327,5002,472,6367,325,571,228,6368,95,640,6341,6410,337,6308,341,479,131,495,262,256,6431,331,2295,622,481,6280,110,532,381,6418,6477,401,684,500,2340,248,267,2431,125,76,656,265,250,6449,6432,644,533,643,314,1124,324,6358,2002,564,6394,491,26,6369,620,35,537,6284,140,484,6469,443,535,224,577,615,617,2059,6360,570,6468,2425,595,6470,404,362,285,1123,686,598,2422,287,2103,2426,183,6455,288,298,460,2427,1121,540,444,323,6357,296,366,2045,700,68,418,133,374,492,372,429,455,519,6304,332,6472,421,174,6388,6346,6474,329,572,367,2418,546,6440,498,434,661,6407,6393,129,2419,6350,6371,6292,5011,6408,130,5013,6479,360,558,6476,356,497,6365,2424,319,358,275,476,6291,6481,494,135,422,6516,6478,6370,382,2430,88,687,5012,2143,486,6378,6375,6485,230,12,694,691,697,2003,666,6458,2095,518,549,6475,244,6225,430,137,1126,6281,396,2046,501,370,665,682,6364,142,339,31,6342,6376,2404,2434,304,6223,6314,515,280,309,215,587,54,6403,25,3,6445,16,98,668,2164,77,457,563,512,279,502,6260,6387,317,291,651,2121,468,194,173,223,2044,406,6310,618,2040,299,6504,56,6446,6233,6453,1064,6235,243,977,217,499,234,233,236,6386,2048,742,2053,6447,389,2054,6389,334,2135,2263,2266,235,616,6238,6331,6422,363,90,2028,39,525,276,2119,619,808,6467,6406,2184,105,6325,6315,2396,6242,6487,6241,6274,6226,102,482,555,237,6282,6228,364,261,297,6421,400,2407,6285,6448,379,53,335,663,227,493,305,647,5019,6405,653,61,249,384,132,74,6250,2428,6427,6428,6490,6219,613,6495,465,451,391,2079,6451,357,338,6415,490,1125,6517,2429,6000,73) AND ID_TALHAO IN (506,503,002,015,507,014,011,009,054,005,500,323,001,508,505,019,017,509,512,510,007,502,021,036,071,034,013,028,010,020,518,006,018,031,067,501,012,057,003,004,008,024,521,504,023,027,016,026,511,134,514,062,517,040,042,525,332,520,030,025,029,035,053,033,522,039,516,045,024-04,025-02,046,050,526,515,022,025-03,513,016-02,218,225,093,044,212,100,121,131,027-02,032,455,076,041,307,306,124,064,052,362,048,058,308,063,519,311,012-02,363,059,361,350,065,345,347,340,015-02,070,043,056,119,066,120,055,523,022-02,024-02,038,037,339,524,334,061,006-02,329,330,004-02,060,049,069,051,500-02,145,305,090,138,192,133,087,226,130,188,141,074,085,136,224,144,103,088,181,077,122,216,111,127,055-02,080,157,155,081,113,147,310,078,073,072,140,082,095,529,068,142,009-02,156,115,331,079,075,387,139,089,083,047,757,527,118,318,312,303,386,114,391,346,106,302,304,101,301,003-02,313,086,091,092,105,099,084,104,316,380,321,372,097,098,096,382,343,102,364,373,381,383,376,369,367,326,378,324,366,325,328,377,365,341,344,315,309,370,368,320,314,374,371,319,317,327,348,336,322,355,338,204,337,533,700,530,531,528,117,458,107,148,159,388,459,758,154,335,429,457,718,534,405,706,094,184,704,418,412,123,152,462,390,404,759,703,450,112,149,616,110,392,701,357,402,353,116,540,539,537,045-02,535,536,002-02,358,354,351,359,342,352,356,201,202,207,211,206,244,333,208,221,223,203,205,209,210,220,219,217,230,215,214,213,228,229,222,227,408,108,143,384,135,185,761,132,253,250,251,261,263,266,262,252,173,014-01,146,176,900,177,964,974,048-02,053-03,425,137,419,189,615,613,461,532,058-02,049-02,153,151,150,158,128,109,126,010-03,035-02,379,001-02,008-02,026-02,431,401,762,129,702,617,160,603,454,407,396,125,183,397,007-02,167,187,186,270,456,164,013-02,013-03,707,059-002,056-02,178,165,709,010-02,249,172,360,019-02,179,011-02,349,191,166,175,267,255,265,254,256,264,257,705,760,409,614,385,024-03,389,460,182,170,005-02,053-02,180)
Failed to execute (Select).

Failed to execute (AlocadorDeParcelas).
