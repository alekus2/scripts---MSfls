import arcpy
import os

class Toolbox(object):
    def __init__(self):
        self.label = "Removedor de Parcelas"
        self.alias = "removetor_toolbox"
        self.tools = [AlocadorDeParcelas]

class AlocadorDeParcelas(object):
    def __init__(self):
        self.label = "Removedor de Parcelas"
        self.description = "Filtra e exporta parcelas com base em paridade."
        self.canRunInBackground = False

    def getParameterInfo(self):
        param_workspace = arcpy.Parameter(
            displayName="Pasta de saída",
            name="workspace",
            datatype="DEWorkspace",
            parameterType="Required",
            direction="Input"
        )

        param_layer = arcpy.Parameter(
            displayName="Camada base de dados",
            name="input_layer",
            datatype="DEFeatureClass",
            parameterType="Required",
            direction="Input"
        )

        return [param_workspace, param_layer]

    def execute(self, parameters):
        workspace = parameters[0].valueAsText
        input_layer = parameters[1].valueAsText

        if not arcpy.Exists(input_layer):
            arcpy.AddError(f"Erro: A camada {input_layer} não foi encontrada.")
            return

        try:
            # Criar um dicionário para armazenar o máximo de nm_parcela
            max_values = {}

            # Usar um cursor para iterar sobre os registros
            with arcpy.da.UpdateCursor(input_layer, ["CD_PROJETO", "CD_TALHAO", "NM_PARCELA"]) as cursor:
                for row in cursor:
                    index_key = f"{row[0]}_{row[1]}"

                    if index_key not in max_values:
                        max_values[index_key] = row[2]
                    else:
                        max_values[index_key] = max(max_values[index_key], row[2])

            # Modificar a tabela conforme condição de paridade
            with arcpy.da.UpdateCursor(input_layer, ["CD_PROJETO", "CD_TALHAO", "NM_PARCELA"]) as cursor:
                for row in cursor:
                    index_key = f"{row[0]}_{row[1]}"
                    max_parcela = max_values[index_key]

                    # Se o máximo é par, muda NM_PARCELA para 0
                    if max_parcela % 2 == 0:
                        row[2] = 0
                    
                    # Atualiza a linha na tabela
                    cursor.updateRow(row)

            # Excluir os registros que têm NM_PARCELA igual a 0
            arcpy.management.SelectLayerByAttribute(input_layer, "NEW_SELECTION", "NM_PARCELA = 0")
            arcpy.management.DeleteFeatures(input_layer)

            arcpy.AddMessage("Processo concluído. Todas as parcelas pares foram removidas.")

        except Exception as e:
            arcpy.AddError(f"Erro ao processar a camada: {e}")