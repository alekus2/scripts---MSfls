import arcpy
import os
import pandas as pd

class Toolbox(object):
    def __init__(self):
        self.label = "Removedor de Parcelas"
        self.alias = "removetor_toolbox"
        self.tools = [AlocadorDeParcelas]

class AlocadorDeParcelas(object):
    def __init__(self):
        self.label = "Removedor de Parcelas"
        self.description = "Filtra e exporta parcelas com base em 0's e 1's"
        self.canRunInBackground = False

    def getParameterInfo(self):
        param_workspace = arcpy.Parameter(
            displayName="Pasta de saída",
            name="workspace",
            datatype="DEWorkspace",
            parameterType="Required",
            direction="Input"
        )

        param_layer = arcpy.Parameter(
            displayName="Camada base de dados",
            name="input_layer",
            datatype="DEFeatureClass",
            parameterType="Required",
            direction="Input"
        )

        return [param_workspace, param_layer]
#o codigo pega um shpfile de pontos onde estao localizadas as parcelas e ele verifica se o maximo da parcela é impar ou par e se for par ele modifica ela para 0 e dps apaga conforme as que forem igual a 1
    def execute(self, parameters):
        base_path = parameters[0].valueAsText
        workspace = parameters[1].valueAsText

#ele deve alterar isso tudo dentro do proprio shpfile ou seja dentro da sua tabela, e dentro dela ele deve verificar as colunas "NM_PARCELA" e o index da parcela seria a concatenação de "CD_PROJETO" e "CD_TALHAO" onde em nm ele pega o maximo de cada parcela dos index de talhao
        if not arcpy.Exists(base_path):
            arcpy.AddError(f"Erro: O arquivo {base_path} não foi encontrado.")
            return

        try:
            max_parcela = df['nm_parcela'].max()
            arcpy.AddMessage(f"Valor máximo de nm_parcela: {max_parcela}")
#ele nao deve ultilizar o pandas para isso,ele tem que fazer nativamente pelo proprio arcgis pro, e assim que ele fzr isso ele tem q apagar as colunas criadas e excluir tudo que obtiver 0.
            df['contador'] = df['nm_parcela'].apply(lambda x: 0 if max_parcela % 2 == 0 and x % 2 == 0 else (1 if max_parcela % 2 != 0 and x % 2 != 0 else None))
            
            df_filtrado = df[df['contador'] == 1]

            if df_filtrado.empty:
                arcpy.AddError("Erro: Nenhuma parcela ímpar encontrada.")
                return

            # Exportar as parcelas filtradas, por exemplo, para um novo arquivo Excel
            output_path = os.path.join(workspace, "Parcelas_Impares.xlsx")
            df_filtrado.to_excel(output_path, index=False)
            arcpy.AddMessage(f"Parcelas ímpares exportadas para: {output_path}")

            # Remover a coluna 'contador'
            df.drop(columns=['contador'], inplace=True)

        except Exception as e:
            arcpy.AddError(f"Erro ao processar o arquivo Excel: {e}")
