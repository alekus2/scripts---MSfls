grid <- st_intersection(grid_existente, sg) %>% st_sf()
grid$area.grid <- round(as.numeric(st_area(grid)))
grid <- grid %>% filter(area.grid >= 400)


grid_existente <- st_transform(grid_existente, 31982)


fileInput("grid_existente", "Carregar Grid Existente (.shp):",
          multiple = TRUE,
          accept = c('.shp','.dbf','.sbn','.sbx','.shx','.prj'))


grid_existente <- reactive({
  req(input$grid_existente)
  
  # Encontrar o .shp
  shp_path <- input$grid_existente$datapath[grepl(".shp$", input$grid_existente$name)]
  dir_path <- dirname(shp_path)
  shp_name <- input$grid_existente$name[grepl(".shp$", input$grid_existente$name)]
  shp_full <- file.path(dir_path, shp_name)
  
  st_read(shp_full, options = "ENCODING=UTF-8")
})



resultado <- process_data(shape = shape(),
                          recomend = recomend(),
                          parc_exist_path = caminho_parc_exist(),
                          forma_parcela = input$formato,
                          tipo_parcela = input$tipo,
                          distancia.minima = input$distancia,
                          update_progress = progresso,
                          grid_existente = grid_existente())


